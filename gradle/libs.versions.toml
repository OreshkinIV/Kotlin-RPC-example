[versions]
agp = "8.7.2"
kotlin = "2.1.10"
android-compileSdk = "35"
android-minSdk = "26"
android-targetSdk = "35"

koin = "4.0.2"

androidx-activityCompose = "1.10.0"
androidx-lifecycle = "2.8.7"
compose-multiplatform = "1.8.0-alpha03"
kotlinx-coroutines = "1.10.1"
navigation = "2.8.0-alpha10"
coroutines-core = "1.7.3"

ktor = "3.0.3"
kotlinx-rpc = "0.6.0"

logback = "1.5.16"
kermit = "2.0.4"

postgres= "42.7.2"
exposed = "0.53.0"

androidx-data-store = "1.1.2"

protobuf = "0.9.4"
grpc-netty="1.69.0"
grpc-core="0.5.1-grpc-21"

[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines = { module ="org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines-core" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

# koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

# logs
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-tls = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }

# serialization and content type
ktor-server-content = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-client-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# auth
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }

# config files
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }

# android client
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
# ios client
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

# krpc
krpc-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-server", version.ref = "kotlinx-rpc" }
krpc-ktor-server = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-server", version.ref = "kotlinx-rpc" }
krpc-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-client", version.ref = "kotlinx-rpc" }
krpc-ktor-client = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-ktor-client", version.ref = "kotlinx-rpc" }
krpc-serialization = { module = "org.jetbrains.kotlinx:kotlinx-rpc-krpc-serialization-json", version.ref = "kotlinx-rpc" }
krpc-grpc-core = { module = "org.jetbrains.kotlinx:kotlinx-rpc-grpc-core", version.ref = "grpc-core" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc-netty" }

# database
postgress = { module = "org.postgresql:postgresql", version.ref = "postgres" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

# local data store
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "androidx-data-store" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-data-store" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

kotlinx-rpc-plugin = { id = "org.jetbrains.kotlinx.rpc.plugin", version.ref = "kotlinx-rpc" }

protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }